{"version":3,"sources":["app.js","directives.js","docs.js","errors.js","examples.js","search.js","tutorials.js","versions.js"],"names":["angular","module","config","$locationProvider","html5Mode","hashPrefix","directivesModule","directive","$anchorScroll","$location","scope","element","on","event","hash","$apply","restrict","terminal","compile","linenums","hasClass","match","exec","className","lang","html","window","prettyPrintOne","yOffset","link","attrs","addClass","$rootScope","controller","$element","ctrl","this","$on","hs","root","register","h","previousLevel","i","length","level","children","push","component","template","bindings","items","path","replace","require","tocContainer","tocCollector","showToc","controllerAs","ctrls","$compile","header","after","registerHDirective","toc","id","fragment","title","text","$scope","$window","$cookies","NG_PAGES","NG_NAVIGATION","CURRENT_NG_VERSION","errorPartialPath","navClass","navItem","active","href","currentPage","current","nav-index-section","type","pagePath","_gaq","loading","loadingError","$watch","breadcrumb","breadcrumbPath","partialPath","currentArea","area","pathParts","split","forEach","part","name","url","hasError","versionNumber","full","version","codeName","test","filter","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","STACK_TRACE_REGEXP","target","targetHtml","nchars","substr","errorLinkFilter","search","formatArgs","errorDisplay","isDefined","formattedText","formatString","arguments","index","slice","apply","setTab","tab","tabs","activeTabIndex","$broadcast","examples","querySelectorAll","child","getAttribute","e","style","display","factory","$document","newWindow","fields","form","value","input","attr","append","find","submit","remove","COPYRIGHT","Date","getFullYear","COPYRIGHT_JS_CSS","COPYRIGHT_HTML","filename","lastIndexOf","$q","getExampleData","formPostData","createCopyrightNotice","bindToController","examplePath","example","manifest","undefined","files","prepareExampleData","resolve","then","data","exampleNameParts","unshift","charAt","toUpperCase","join","open","clickEvent","ctrlKey","metaKey","postData","tags[0]","tags[1]","private","file","content","description","$onInit","$http","exampleFolder","get","response","filePromises","transformResponse","all","docsSearch","clearResults","results","colClassName","hasResults","q","hits","api","guide","tutorial","error","misc","hit","limit","totalAreas","Object","keys","$$phase","result","hideResults","handleResultClicked","$event","which","pop","provider","localSearchFactory","$timeout","console","log","lunr","ref","field","boost","indexReadyPromise","searchData","page","add","webWorkerSearchFactory","searchIndex","defer","worker","Worker","onmessage","oEvent","pages","d","map","promise","postMessage","$inject","$get","focus","focused","$eval","body","keyCode","activeElement","stopPropagation","preventDefault","seq","docTutorialNav","prev","next","diffLo","diffHi","step","ALL_NG_VERSIONS","versionStr","isSnapshot","distTag","versions","selectedVersion","collection","matcherFn","ii","jumpToDocsVersion","currentPagePath","location","docsUrl"],"mappings":"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","file":"docs.min.js","sourcesContent":["'use strict';\n\nangular.module('docsApp', [\n  'ngRoute',\n  'ngCookies',\n  'ngSanitize',\n  'ngAnimate',\n  'DocsController',\n  'pagesData',\n  'navData',\n  'directives',\n  'errors',\n  'examples',\n  'search',\n  'tutorials',\n  'versions',\n  'ui.bootstrap.dropdown'\n])\n\n.config(['$locationProvider', function($locationProvider) {\n  $locationProvider.html5Mode(true).hashPrefix('!');\n}]);\n","'use strict';\n\nvar directivesModule = angular.module('directives', []);\n\ndirectivesModule\n/**\n * backToTop Directive\n * @param  {Function} $anchorScroll\n *\n * @description Ensure that the browser scrolls when the anchor is clicked\n */\n.directive('backToTop', ['$anchorScroll', '$location', function($anchorScroll, $location) {\n  return function link(scope, element) {\n    element.on('click', function(event) {\n      $location.hash('');\n      scope.$apply($anchorScroll);\n    });\n  };\n}])\n\n\n.directive('code', function() {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element) {\n      var linenums = element.hasClass('linenum');// || element.parent()[0].nodeName === 'PRE';\n      var match = /lang-(\\S+)/.exec(element[0].className);\n      var lang = match && match[1];\n      var html = element.html();\n      element.html(window.prettyPrintOne(html, lang, linenums));\n    }\n  };\n})\n\n.directive('scrollYOffsetElement', ['$anchorScroll', function($anchorScroll) {\n  return function(scope, element) {\n    $anchorScroll.yOffset = element;\n  };\n}])\n\n.directive('table', function() {\n  return {\n    restrict: 'E',\n    link: function(scope, element, attrs) {\n      if (!attrs['class']) {\n        element.addClass('table table-bordered table-striped code-table');\n      }\n    }\n  };\n})\n\n.directive('tocCollector', ['$rootScope', function($rootScope) {\n  return {\n    controller: ['$element', function($element) {\n      /* eslint-disable no-invalid-this */\n      var ctrl = this;\n\n      $rootScope.$on('$includeContentRequested', function() {\n        ctrl.hs = [];\n        ctrl.root = [];\n      });\n\n      this.hs = [];\n      this.root = [];\n      this.element = $element;\n\n      this.register = function(h) {\n        var previousLevel;\n\n        for (var i = ctrl.hs.length - 1; i >= 0; i--) {\n          if (ctrl.hs[i].level === (h.level - 1)) {\n            previousLevel = ctrl.hs[i];\n            break;\n          }\n        }\n\n        if (previousLevel) {\n          previousLevel.children.push(h);\n        } else {\n          this.root.push(h);\n        }\n\n        ctrl.hs.push(h);\n        /* eslint-enable no-invalid-this */\n      };\n    }]\n  };\n}])\n\n.component('tocTree', {\n  template: '<ul>' +\n      '<li ng-repeat=\"item in $ctrl.items\">' +\n        '<a ng-href=\"{{ $ctrl.path }}#{{item.fragment}}\">{{item.title}}</a>' +\n        '<toc-tree ng-if=\"::item.children.length > 0\" items=\"item.children\"></toc-tree>' +\n      '</li>' +\n    '</ul>',\n  bindings: {\n    items: '<'\n  },\n  controller: ['$location', /** @this */ function($location) {\n    this.path = $location.path().replace(/^\\/?(.+?)(\\/index)?\\/?$/, '$1');\n  }]\n})\n.directive('tocContainer', function() {\n  return {\n    scope: true,\n    restrict: 'E',\n    require: {\n      tocContainer: '',\n      tocCollector: '^^'\n    },\n    controller: function() {\n      this.showToc = true;\n      this.items = [];\n    },\n    controllerAs: '$ctrl',\n    link: function(scope, element, attrs, ctrls) {\n      ctrls.tocContainer.items = ctrls.tocCollector.root;\n    },\n    template: '<div ng-if=\"::$ctrl.items.length > 1\">' +\n      '<b>Contents</b>' +\n      '<button class=\"btn\" ng-click=\"$ctrl.showToc = !$ctrl.showToc\">{{$ctrl.showToc ? \\'Hide\\' : \\'Show\\'}}</button><br>' +\n      '<toc-tree items=\"$ctrl.items\" ng-show=\"$ctrl.showToc\"></toc-tree>' +\n      '</div>'\n  };\n})\n.directive('header', function() {\n  return {\n    restrict: 'E',\n    controller: ['$element', function($element) {\n      // eslint-disable-next-line no-invalid-this\n      this.element = $element;\n    }]\n  };\n})\n.directive('h1', ['$compile', function($compile) {\n  return {\n    restrict: 'E',\n    require: {\n      tocCollector: '^^?',\n      header: '^^?'\n    },\n    link: function(scope, element, attrs, ctrls) {\n      if (!ctrls.tocCollector) return;\n\n      var tocContainer = angular.element('<toc-container></toc-container>');\n      var containerElement = ctrls.header ? ctrls.header.element : element;\n\n      containerElement.after(tocContainer);\n      $compile(tocContainer)(scope);\n    }\n  };\n}]);\n\nfor (var i = 2; i <= 5; i++) {\n  registerHDirective(i);\n}\n\nfunction registerHDirective(i) {\n  directivesModule.directive('h' + i, function() {\n    return {\n      restrict: 'E',\n      require: {\n        'tocCollector': '^^?'\n      },\n      link: function(scope, element, attrs, ctrls) {\n        var toc = ctrls.tocCollector;\n\n        if (!toc || !attrs.id) return;\n\n        toc.register({\n          level: i,\n          fragment: attrs.id,\n          title: element.text(),\n          children: []\n        });\n\n      }\n    };\n  });\n}\n\n","'use strict';\n\nangular.module('DocsController', ['currentVersionData'])\n\n.controller('DocsController', [\n          '$scope', '$rootScope', '$location', '$window', '$cookies',\n              'NG_PAGES', 'NG_NAVIGATION', 'CURRENT_NG_VERSION',\n  function($scope, $rootScope, $location, $window, $cookies,\n              NG_PAGES, NG_NAVIGATION, CURRENT_NG_VERSION) {\n\n  var errorPartialPath = 'Error404.html';\n\n  $scope.navClass = function(navItem) {\n    return {\n      active: navItem.href && this.currentPage && this.currentPage.path,\n      current: this.currentPage && this.currentPage.path === navItem.href,\n      'nav-index-section': navItem.type === 'section'\n    };\n  };\n\n  $scope.$on('$includeContentLoaded', function() {\n    var pagePath = $scope.currentPage ? $scope.currentPage.path : $location.path();\n    $window._gaq.push(['_trackPageview', pagePath]);\n    $scope.loading = false;\n  });\n\n  $scope.$on('$includeContentError', function() {\n    $scope.loading = false;\n    $scope.loadingError = true;\n  });\n\n  $scope.$watch(function docsPathWatch() {return $location.path(); }, function docsPathWatchAction(path) {\n\n    path = path.replace(/^\\/?(.+?)(\\/index)?\\/?$/, '$1');\n\n    var currentPage = $scope.currentPage = NG_PAGES[path];\n\n    $scope.loading = true;\n    $scope.loadingError = false;\n\n    if (currentPage) {\n      $scope.partialPath = 'partials/' + path + '.html';\n      $scope.currentArea = NG_NAVIGATION[currentPage.area];\n      var pathParts = currentPage.path.split('/');\n      var breadcrumb = $scope.breadcrumb = [];\n      var breadcrumbPath = '';\n      angular.forEach(pathParts, function(part) {\n        breadcrumbPath += part;\n        breadcrumb.push({ name: (NG_PAGES[breadcrumbPath] && NG_PAGES[breadcrumbPath].name) || part, url: breadcrumbPath });\n        breadcrumbPath += '/';\n      });\n    } else {\n      $scope.currentArea = NG_NAVIGATION['api'];\n      $scope.breadcrumb = [];\n      $scope.partialPath = errorPartialPath;\n    }\n  });\n\n  $scope.hasError = function() {\n    return $scope.partialPath === errorPartialPath || $scope.loadingError;\n  };\n\n  /**********************************\n   Initialize\n   ***********************************/\n\n  $scope.versionNumber = CURRENT_NG_VERSION.full;\n  $scope.version = CURRENT_NG_VERSION.full + ' ' + CURRENT_NG_VERSION.codeName;\n  $scope.loading = false;\n  $scope.loadingError = false;\n\n  var INDEX_PATH = /^(\\/|\\/index[^.]*.html)$/;\n  if (!$location.path() || INDEX_PATH.test($location.path())) {\n    $location.path('/api').replace();\n  }\n\n}]);\n","'use strict';\n\nangular.module('errors', ['ngSanitize'])\n\n.filter('errorLink', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP = /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>]/g,\n      MAILTO_REGEXP = /^mailto:/,\n      STACK_TRACE_REGEXP = /:\\d+:\\d+$/;\n\n  var truncate = function(text, nchars) {\n    if (text.length > nchars) {\n      return text.substr(0, nchars - 3) + '...';\n    }\n    return text;\n  };\n\n  return function(text, target) {\n    if (!text) return text;\n\n    var targetHtml = target ? ' target=\"' + target + '\"' : '';\n\n    return $sanitize(text.replace(LINKY_URL_REGEXP, function(url) {\n      if (STACK_TRACE_REGEXP.test(url)) {\n        return url;\n      }\n\n      // if we did not match ftp/http/mailto then assume mailto\n      if (!/^((ftp|https?):\\/\\/|mailto:)/.test(url)) url = 'mailto:' + url;\n\n      return '<a' + targetHtml + ' href=\"' + url + '\">' +\n                truncate(url.replace(MAILTO_REGEXP, ''), 60) +\n              '</a>';\n    }));\n  };\n}])\n\n\n.directive('errorDisplay', ['$location', 'errorLinkFilter', function($location, errorLinkFilter) {\n  var encodeAngleBrackets = function(text) {\n    return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  };\n\n  var interpolate = function(formatString) {\n    var formatArgs = arguments;\n    return formatString.replace(/\\{\\d+\\}/g, function(match) {\n      // Drop the braces and use the unary plus to convert to an integer.\n      // The index will be off by one because of the formatString.\n      var index = +match.slice(1, -1);\n      if (index + 1 >= formatArgs.length) {\n        return match;\n      }\n      return formatArgs[index + 1];\n    });\n  };\n\n  return {\n    link: function(scope, element, attrs) {\n      var search = $location.search(),\n        formatArgs = [attrs.errorDisplay],\n        formattedText,\n        i;\n\n      for (i = 0; angular.isDefined(search['p' + i]); i++) {\n        formatArgs.push(search['p' + i]);\n      }\n\n      formattedText = encodeAngleBrackets(interpolate.apply(null, formatArgs));\n      element.html(errorLinkFilter(formattedText, '_blank'));\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('examples', [])\n\n.directive('runnableExample', [function() {\n  var exampleClassNameSelector = '.runnable-example-file';\n  var tpl =\n    '<nav class=\"runnable-example-tabs\" ng-if=\"tabs\">' +\n    '  <a ng-class=\"{active:$index==activeTabIndex}\"' +\n         'ng-repeat=\"tab in tabs track by $index\" ' +\n         'href=\"\" ' +\n         'class=\"btn\"' +\n         'ng-click=\"setTab($index)\">' +\n    '    {{ tab }}' +\n    '  </a>' +\n    '</nav>';\n\n  return {\n    restrict: 'C',\n    scope : true,\n    controller : ['$scope', function($scope) {\n      $scope.setTab = function(index) {\n        var tab = $scope.tabs[index];\n        $scope.activeTabIndex = index;\n        $scope.$broadcast('tabChange', index, tab);\n      };\n    }],\n    compile : function(element) {\n      element.html(tpl + element.html());\n      return function(scope, element) {\n        var node = element[0];\n        var examples = node.querySelectorAll(exampleClassNameSelector);\n        var tabs = [];\n        angular.forEach(examples, function(child, index) {\n          tabs.push(child.getAttribute('name'));\n        });\n\n        if (tabs.length > 0) {\n          scope.tabs = tabs;\n          scope.$on('tabChange', function(e, index, title) {\n            angular.forEach(examples, function(child) {\n              child.style.display = 'none';\n            });\n            var selected = examples[index];\n            selected.style.display = 'block';\n          });\n          scope.setTab(0);\n        }\n      };\n    }\n  };\n}])\n\n.factory('formPostData', ['$document', function($document) {\n  return function(url, newWindow, fields) {\n    /**\n     * If the form posts to target=\"_blank\", pop-up blockers can cause it not to work.\n     * If a user chooses to bypass pop-up blocker one time and click the link, they will arrive at\n     * a new default plnkr, not a plnkr with the desired template.  Given this undesired behavior,\n     * some may still want to open the plnk in a new window by opting-in via ctrl+click.  The\n     * newWindow param allows for this possibility.\n     */\n    var target = newWindow ? '_blank' : '_self';\n    var form = angular.element('<form style=\"display: none;\" method=\"post\" action=\"' + url + '\" target=\"' + target + '\"></form>');\n    angular.forEach(fields, function(value, name) {\n      var input = angular.element('<input type=\"hidden\" name=\"' +  name + '\">');\n      input.attr('value', value);\n      form.append(input);\n    });\n    $document.find('body').append(form);\n    form[0].submit();\n    form.remove();\n  };\n}])\n\n.factory('createCopyrightNotice', function() {\n    var COPYRIGHT = 'Copyright ' + (new Date()).getFullYear() + ' Google LLC. All Rights Reserved.\\n'\n     + 'Use of this source code is governed by an MIT-style license that\\n'\n     + 'can be found in the LICENSE file at http://angular.io/license';\n    var COPYRIGHT_JS_CSS = '\\n\\n/*\\n' + COPYRIGHT + '\\n*/';\n    var COPYRIGHT_HTML = '\\n\\n<!-- \\n' + COPYRIGHT + '\\n-->';\n\n    return function getCopyright(filename) {\n      switch (filename.substr(filename.lastIndexOf('.'))) {\n        case '.html':\n          return COPYRIGHT_HTML;\n        case '.js':\n        case '.css':\n          return COPYRIGHT_JS_CSS;\n        case '.md':\n          return COPYRIGHT;\n      }\n      return '';\n    };\n})\n\n.directive('plnkrOpener', ['$q', 'getExampleData', 'formPostData', 'createCopyrightNotice', function($q, getExampleData, formPostData, createCopyrightNotice) {\n  return {\n    scope: {},\n    bindToController: {\n      'examplePath': '@'\n    },\n    controllerAs: 'plnkr',\n    template: '<button ng-click=\"plnkr.open($event)\" class=\"btn pull-right\"> <i class=\"glyphicon glyphicon-edit\">&nbsp;</i> Edit in Plunker</button> ',\n    controller: [function PlnkrOpenerCtrl() {\n      var ctrl = this;\n\n      ctrl.example = {\n        path: ctrl.examplePath,\n        manifest: undefined,\n        files: undefined,\n        name: 'AngularJS Example'\n      };\n\n      ctrl.prepareExampleData = function() {\n        if (ctrl.example.manifest) {\n          return $q.resolve(ctrl.example);\n        }\n\n        return getExampleData(ctrl.examplePath).then(function(data) {\n          ctrl.example.files = data.files;\n          ctrl.example.manifest = data.manifest;\n\n          // Build a pretty title for the Plunkr\n          var exampleNameParts = data.manifest.name.split('-');\n          exampleNameParts.unshift('AngularJS');\n          angular.forEach(exampleNameParts, function(part, index) {\n            exampleNameParts[index] = part.charAt(0).toUpperCase() + part.substr(1);\n          });\n          ctrl.example.name = exampleNameParts.join(' - ');\n\n          return ctrl.example;\n        });\n      };\n\n      ctrl.open = function(clickEvent) {\n\n        var newWindow = clickEvent.ctrlKey || clickEvent.metaKey;\n\n        var postData = {\n          'tags[0]': 'angularjs',\n          'tags[1]': 'example',\n          'private': true\n        };\n\n        // Make sure the example data is available.\n        // If an XHR must be made, this might break some pop-up blockers when\n        // new window is requested\n        ctrl.prepareExampleData()\n          .then(function() {\n            angular.forEach(ctrl.example.files, function(file) {\n              postData['files[' + file.name + ']'] = file.content + createCopyrightNotice(file.name);\n            });\n\n            postData.description = ctrl.example.name;\n\n            formPostData('https://plnkr.co/edit/?p=preview', newWindow, postData);\n          });\n\n      };\n\n      ctrl.$onInit = function() {\n        // Initialize the example data, so it's ready when clicking the open button.\n        // Otherwise pop-up blockers will prevent a new window from opening\n        ctrl.prepareExampleData(ctrl.example.path);\n      };\n    }]\n  };\n}])\n\n.factory('getExampleData', ['$http', '$q', function($http, $q) {\n  return function(exampleFolder) {\n    // Load the manifest for the example\n    return $http.get(exampleFolder + '/manifest.json')\n      .then(function(response) {\n        return response.data;\n      })\n      .then(function(manifest) {\n        var filePromises = [];\n\n        angular.forEach(manifest.files, function(filename) {\n          filePromises.push($http.get(exampleFolder + '/' + filename, { transformResponse: [] })\n            .then(function(response) {\n\n              // The manifests provide the production index file but Plunkr wants\n              // a straight index.html\n              if (filename === 'index-production.html') {\n                filename = 'index.html';\n              }\n\n              return {\n                name: filename,\n                content: response.data\n              };\n            }));\n        });\n\n        return $q.all({\n          manifest: manifest,\n          files: $q.all(filePromises)\n        });\n      });\n  };\n}]);\n","'use strict';\n\nangular.module('search', [])\n\n.controller('DocsSearchCtrl', ['$scope', '$location', 'docsSearch', function($scope, $location, docsSearch) {\n  function clearResults() {\n    $scope.results = [];\n    $scope.colClassName = null;\n    $scope.hasResults = false;\n  }\n\n  $scope.search = function(q) {\n    var MIN_SEARCH_LENGTH = 2;\n    if (q.length >= MIN_SEARCH_LENGTH) {\n      docsSearch(q).then(function(hits) {\n        // Make sure the areas are always in the same order\n        var results = {\n          api: [],\n          guide: [],\n          tutorial: [],\n          error: [],\n          misc: []\n        };\n\n        angular.forEach(hits, function(hit) {\n          var area = hit.area;\n\n          var limit = (area === 'api') ? 40 : 14;\n          results[area] = results[area] || [];\n          if (results[area].length < limit) {\n            results[area].push(hit);\n          }\n        });\n\n        var totalAreas = Object.keys(results).length;\n        if (totalAreas > 0) {\n          $scope.colClassName = 'cols-' + totalAreas;\n        }\n        $scope.hasResults = totalAreas > 0;\n        $scope.results = results;\n      });\n    } else {\n      clearResults();\n    }\n    if (!$scope.$$phase) $scope.$apply();\n  };\n\n  $scope.submit = function() {\n    var result;\n    if ($scope.results.api) {\n      result = $scope.results.api[0];\n    } else {\n      for (var i in $scope.results) {\n        result = $scope.results[i][0];\n        if (result) {\n          break;\n        }\n      }\n    }\n    if (result) {\n      $location.path(result.path);\n      $scope.hideResults();\n    }\n  };\n\n  $scope.hideResults = function() {\n    clearResults();\n    $scope.q = '';\n  };\n\n  $scope.handleResultClicked = function($event) {\n    if ($event.which === 1 && !$event.ctrlKey && !$event.metaKey) {\n      $scope.hideResults();\n    }\n  };\n}])\n\n\n.controller('Error404SearchCtrl', ['$scope', '$location', 'docsSearch',\n        function($scope, $location, docsSearch) {\n  docsSearch($location.path().split(/[/.:]/).pop()).then(function(results) {\n    $scope.results = {};\n    angular.forEach(results, function(result) {\n      var area = $scope.results[result.area] || [];\n      area.push(result);\n      $scope.results[result.area] = area;\n    });\n  });\n}])\n\n\n.provider('docsSearch', function() {\n\n  // This version of the service builds the index in the current thread,\n  // which blocks rendering and other browser activities.\n  // It should only be used where the browser does not support WebWorkers\n  function localSearchFactory($http, $timeout, NG_PAGES) {\n\n    if (window.console && window.console.log) {\n      window.console.log('Using Local Search Index');\n    }\n\n    // Create the lunr index\n    var index = lunr(/** @this */ function() {\n      this.ref('path');\n      this.field('titleWords', {boost: 50});\n      this.field('members', { boost: 40});\n      this.field('keywords', { boost : 20 });\n    });\n\n    // Delay building the index by loading the data asynchronously\n    var indexReadyPromise = $http.get('js/search-data.json').then(function(response) {\n      var searchData = response.data;\n      // Delay building the index for 500ms to allow the page to render\n      return $timeout(function() {\n        // load the page data into the index\n        angular.forEach(searchData, function(page) {\n          index.add(page);\n        });\n      }, 500);\n    });\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    // (In this case we just resolve the promise immediately as it is not\n    // inherently an async process)\n    return function(q) {\n      return indexReadyPromise.then(function() {\n        var hits = index.search(q);\n        var results = [];\n        angular.forEach(hits, function(hit) {\n          results.push(NG_PAGES[hit.ref]);\n        });\n        return results;\n      });\n    };\n  }\n  localSearchFactory.$inject = ['$http', '$timeout', 'NG_PAGES'];\n\n  // This version of the service builds the index in a WebWorker,\n  // which does not block rendering and other browser activities.\n  // It should only be used where the browser does support WebWorkers\n  function webWorkerSearchFactory($q, $rootScope, NG_PAGES) {\n\n    if (window.console && window.console.log) {\n      window.console.log('Using WebWorker Search Index');\n    }\n\n    var searchIndex = $q.defer();\n    var results;\n\n    var worker = new window.Worker('js/search-worker.js');\n\n    // The worker will send us a message in two situations:\n    // - when the index has been built, ready to run a query\n    // - when it has completed a search query and the results are available\n    worker.onmessage = function(oEvent) {\n      $rootScope.$apply(function() {\n\n        switch (oEvent.data.e) {\n          case 'index-ready':\n            searchIndex.resolve();\n            break;\n          case 'query-ready':\n            var pages = oEvent.data.d.map(function(path) {\n              return NG_PAGES[path];\n            });\n            results.resolve(pages);\n            break;\n        }\n      });\n    };\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    return function(q) {\n\n      // We only run the query once the index is ready\n      return searchIndex.promise.then(function() {\n\n        results = $q.defer();\n        worker.postMessage({ q: q });\n        return results.promise;\n      });\n    };\n  }\n  webWorkerSearchFactory.$inject = ['$q', '$rootScope', 'NG_PAGES'];\n\n  return {\n    $get: window.Worker ? webWorkerSearchFactory : localSearchFactory\n  };\n})\n\n.directive('focused', function($timeout) {\n  return function(scope, element, attrs) {\n    element[0].focus();\n    element.on('focus', function() {\n      scope.$apply(attrs.focused + '=true');\n    });\n    element.on('blur', function() {\n      // have to use $timeout, so that we close the drop-down after the user clicks,\n      // otherwise when the user clicks we process the closing before we process the click.\n      $timeout(function() {\n        scope.$eval(attrs.focused + '=false');\n      });\n    });\n    scope.$eval(attrs.focused + '=true');\n  };\n})\n\n.directive('docsSearchInput', ['$document', function($document) {\n  return function(scope, element, attrs) {\n    var ESCAPE_KEY_KEYCODE = 27,\n        FORWARD_SLASH_KEYCODE = 191;\n    angular.element($document[0].body).on('keydown', function(event) {\n      var input = element[0];\n      if (event.keyCode === FORWARD_SLASH_KEYCODE && $document[0].activeElement !== input) {\n        event.stopPropagation();\n        event.preventDefault();\n        input.focus();\n      }\n    });\n\n    element.on('keydown', function(event) {\n      if (event.keyCode === ESCAPE_KEY_KEYCODE) {\n        event.stopPropagation();\n        event.preventDefault();\n        scope.$apply(function() {\n          scope.hideResults();\n        });\n      }\n    });\n  };\n}]);\n","'use strict';\n\nangular.module('tutorials', [])\n\n.directive('docTutorialNav', function() {\n  var pages = [\n    '',\n    'step_00', 'step_01', 'step_02', 'step_03', 'step_04',\n    'step_05', 'step_06', 'step_07', 'step_08', 'step_09',\n    'step_10', 'step_11', 'step_12', 'step_13', 'step_14',\n    'the_end'\n  ];\n  return {\n    scope: {},\n    template:\n      '<a ng-href=\"tutorial/{{prev}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-step-backward\"></i> Previous</li></a>\\n' +\n      '<a ng-href=\"http://angular.github.io/angular-phonecat/step-{{seq}}/app\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-play\"></i> Live Demo</li></a>\\n' +\n      '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{diffLo}}...step-{{diffHi}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-search\"></i> Code Diff</li></a>\\n' +\n      '<a ng-href=\"tutorial/{{next}}\"><li class=\"btn btn-primary\">Next <i class=\"glyphicon glyphicon-step-forward\"></i></li></a>',\n    link: function(scope, element, attrs) {\n      var seq = 1 * attrs.docTutorialNav;\n      scope.seq = seq;\n      scope.prev = pages[seq];\n      scope.next = pages[2 + seq];\n      scope.diffLo = seq ? (seq - 1) : '0~1';\n      scope.diffHi = seq;\n\n      element.addClass('btn-group');\n      element.addClass('tutorial-nav');\n    }\n  };\n})\n\n\n.directive('docTutorialReset', function() {\n  return {\n    scope: {\n      'step': '@docTutorialReset'\n    },\n    template:\n      '<p><button class=\"btn\" ng-click=\"show=!show\">Workspace Reset Instructions  ➤</button></p>\\n' +\n      '<div class=\"alert alert-info\" ng-show=\"show\">\\n' +\n      '  <p>Reset the workspace to step {{step}}.</p>' +\n      '  <p><pre>git checkout -f step-{{step}}</pre></p>\\n' +\n      '  <p>Refresh your browser or check out this step online: ' +\n          '<a href=\"http://angular.github.io/angular-phonecat/step-{{step}}/app\">Step {{step}} Live Demo</a>.</p>\\n' +\n      '</div>\\n' +\n      '<p>The most important changes are listed below. You can see the full diff on ' +\n        '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{step ? (step - 1): \\'0~1\\'}}...step-{{step}}\" title=\"See diff on Github\">GitHub</a>.\\n' +\n      '</p>'\n  };\n});\n","'use strict';\n/* global console */\n\nangular.module('versions', ['currentVersionData', 'allVersionsData'])\n\n.directive('versionPicker', function() {\n  return {\n    restrict: 'E',\n    scope: true,\n    controllerAs: '$ctrl',\n    controller: ['$location', '$window', 'CURRENT_NG_VERSION', 'ALL_NG_VERSIONS',\n            /** @this VersionPickerController */\n            function VersionPickerController($location, $window, CURRENT_NG_VERSION, ALL_NG_VERSIONS) {\n\n      var versionStr = CURRENT_NG_VERSION.version;\n\n      if (CURRENT_NG_VERSION.isSnapshot) {\n        versionStr = CURRENT_NG_VERSION.distTag === 'latest' ? 'snapshot-stable' : 'snapshot';\n      }\n\n      this.versions  = ALL_NG_VERSIONS;\n      this.selectedVersion = find(ALL_NG_VERSIONS, function(value) {\n        return value.version.version === versionStr;\n      });\n\n      this.jumpToDocsVersion = function(value) {\n        var currentPagePath = $location.path().replace(/\\/$/, '');\n        $window.location = value.docsUrl + currentPagePath;\n      };\n    }],\n    template:\n      '<div class=\"picker version-picker\">' +\n      '  <select ng-options=\"v as v.label group by v.group for v in $ctrl.versions\"' +\n      '          ng-model=\"$ctrl.selectedVersion\"' +\n      '          ng-change=\"$ctrl.jumpToDocsVersion($ctrl.selectedVersion)\"' +\n      '          class=\"docs-version-jump\">' +\n      '  </select>' +\n      '</div>'\n  };\n\n  function find(collection, matcherFn) {\n    for (var i = 0, ii = collection.length; i < ii; ++i) {\n      if (matcherFn(collection[i])) {\n        return collection[i];\n      }\n    }\n  }\n});\n"]}